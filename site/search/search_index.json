{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hello","text":"<p>Hello, I'm Finn Stainton.</p>"},{"location":"Projects/","title":"Projects","text":""},{"location":"Projects/8-bit_Computer/","title":"Discrete 8-bit Computer","text":"<p> Return to Projects</p>"},{"location":"Projects/8-bit_Computer/#discrete-8-bit-computer","title":"Discrete 8-bit Computer","text":""},{"location":"Projects/8-bit_Computer/#overview","title":"Overview","text":"<p>Construct a simple 8-bit computer from discrete 74 series chips.</p>"},{"location":"Projects/8-bit_Computer/#aim","title":"Aim","text":"<p>To understand how software is executed.</p>"},{"location":"Projects/8-bit_Computer/#instruction-set-architecture","title":"Instruction Set Architecture","text":"<p>Continue Reading</p>"},{"location":"Projects/8-bit_Computer/#hardware-blocks","title":"Hardware Blocks","text":"<p>Continue Reading</p>"},{"location":"Projects/8-bit_Computer/#programs","title":"Programs","text":"<p>Continue Reading</p>"},{"location":"Projects/8-bit_Computer/#other-systems","title":"Other Systems","text":"<ul> <li>Ben Eater SAP-1</li> <li>https://dangrie158.github.io/SAP-1/</li> <li>Gigatron</li> </ul> <p>Status</p> <p>Project: Paused, Writeup: Draft</p>"},{"location":"Projects/8-bit_Computer/hardware/","title":"Hardware Blocks | Discrete 8-bit Computer","text":"<p> Return to 8-bit Home</p>"},{"location":"Projects/8-bit_Computer/hardware/#bus","title":"Bus","text":""},{"location":"Projects/8-bit_Computer/hardware/#control-unit","title":"Control Unit","text":""},{"location":"Projects/8-bit_Computer/hardware/#alu","title":"ALU","text":""},{"location":"Projects/8-bit_Computer/hardware/#registers","title":"Registers","text":""},{"location":"Projects/8-bit_Computer/hardware/#program-memory","title":"Program Memory","text":""},{"location":"Projects/8-bit_Computer/hardware/#random-access-memory","title":"Random Access Memory","text":""},{"location":"Projects/8-bit_Computer/hardware/#input","title":"Input","text":""},{"location":"Projects/8-bit_Computer/hardware/#output","title":"Output","text":""},{"location":"Projects/8-bit_Computer/isa/","title":"Instruction Set Architecture | Discrete 8-bit Computer","text":"<p> Return to 8-bit Home</p>"},{"location":"Projects/8-bit_Computer/isa/#nop-no-operation","title":"NOP | No Operation","text":""},{"location":"Projects/8-bit_Computer/isa/#hlt-halt","title":"HLT | Halt","text":""},{"location":"Projects/8-bit_Computer/isa/#ld-load","title":"LD | Load","text":""},{"location":"Projects/8-bit_Computer/isa/#ldi-load-immediately-out","title":"LDI | Load immediately out","text":""},{"location":"Projects/8-bit_Computer/isa/#mov-move","title":"MOV | Move","text":""},{"location":"Projects/8-bit_Computer/isa/#in-in","title":"IN | In","text":""},{"location":"Projects/8-bit_Computer/isa/#add-add-a-and-b","title":"ADD | Add A and B","text":""},{"location":"Projects/8-bit_Computer/isa/#sub-subtract-a-and-b","title":"SUB | Subtract A and B","text":""},{"location":"Projects/8-bit_Computer/isa/#coma-twos-compliment-of-a","title":"COMA | Two's Compliment of A","text":""},{"location":"Projects/8-bit_Computer/isa/#comb-twos-compliment-of-b","title":"COMB | Two's Compliment of B","text":""},{"location":"Projects/8-bit_Computer/isa/#nega-negate-a-register","title":"NEGA | Negate A register","text":""},{"location":"Projects/8-bit_Computer/isa/#negb-negate-b-register","title":"NEGB | Negate B register","text":""},{"location":"Projects/8-bit_Computer/isa/#and-bitwise-and","title":"AND | Bitwise AND","text":""},{"location":"Projects/8-bit_Computer/isa/#or-bitwise-or","title":"OR | Bitwise OR","text":""},{"location":"Projects/8-bit_Computer/isa/#xor-bitwise-xor","title":"XOR | Bitwise XOR","text":""},{"location":"Projects/8-bit_Computer/isa/#addi-addition-with-immediately-out","title":"ADDI | Addition with immediately out","text":""},{"location":"Projects/8-bit_Computer/isa/#subi-subtract-with-immediately-out","title":"SUBI | Subtract with immediately out","text":""},{"location":"Projects/8-bit_Computer/isa/#andi-bitwise-and-immediately","title":"ANDI | Bitwise AND immediately","text":""},{"location":"Projects/8-bit_Computer/isa/#ori-bitwise-or-immediately","title":"ORI | Bitwise OR immediately","text":""},{"location":"Projects/8-bit_Computer/isa/#ror-rotate-right","title":"ROR | Rotate Right","text":""},{"location":"Projects/8-bit_Computer/isa/#rol-rotate-left","title":"ROL | Rotate Left","text":""},{"location":"Projects/8-bit_Computer/isa/#rorc-rotate-right-with-carry","title":"RORC | Rotate Right with Carry","text":""},{"location":"Projects/8-bit_Computer/isa/#rolc-rotate-left-with-carry","title":"ROLC | Rotate Left with Carry","text":""},{"location":"Projects/8-bit_Computer/isa/#st-store","title":"ST | Store","text":""},{"location":"Projects/8-bit_Computer/isa/#out-output","title":"OUT | Output","text":""},{"location":"Projects/8-bit_Computer/isa/#jmp-jump","title":"JMP | Jump","text":""},{"location":"Projects/8-bit_Computer/isa/#brg-branch-if-greater-than-flag-set","title":"BRG | Branch if Greater than Flag set","text":""},{"location":"Projects/8-bit_Computer/isa/#brge-branch-if-greater-than-or-equal-flag-set","title":"BRGE | Branch if Greater than or Equal Flag set","text":""},{"location":"Projects/8-bit_Computer/isa/#brne-branch-if-negative-or-equal-flag-set","title":"BRNE | Branch if Negative or Equal Flag set","text":""},{"location":"Projects/8-bit_Computer/isa/#brle-branch-if-less-than-or-equal-flag-set","title":"BRLE | Branch if Less than or Equal Flag set","text":""},{"location":"Projects/8-bit_Computer/isa/#brl-branch-if-less-than-flag-set","title":"BRL | Branch if Less than Flag set","text":""},{"location":"Projects/8-bit_Computer/isa/#brn-branch-if-negative-flag-set","title":"BRN | Branch if Negative Flag set","text":""},{"location":"Projects/8-bit_Computer/isa/#brp-branch-if-positive-flag-set","title":"BRP | Branch if Positive Flag set","text":""},{"location":"Projects/8-bit_Computer/isa/#brnc-branch-if-greater-than-flag-set","title":"BRNC | Branch if Greater than Flag set","text":""},{"location":"Projects/8-bit_Computer/isa/#brz-branch-if-zero-flag-set","title":"BRZ | Branch if Zero Flag set","text":""},{"location":"Projects/8-bit_Computer/isa/#brv-branch-if-greater-than-flag-set","title":"BRV | Branch if Greater than Flag set","text":""},{"location":"Projects/8-bit_Computer/isa/#jsub-jump-to-subroutine","title":"JSUB | Jump to Subroutine","text":""},{"location":"Projects/8-bit_Computer/isa/#ret-return-from-subroutine","title":"RET | Return from Subroutine","text":""},{"location":"Projects/OBD-II_CAN%20-%20Experiment/","title":"OBD-II/ CAN","text":"<p> Return to Projects</p>"},{"location":"Projects/OBD-II_CAN%20-%20Experiment/#obd-ii-can-experiment","title":"OBD-II/ CAN: Experiment","text":""},{"location":"Projects/OBD-II_CAN%20-%20Experiment/#background","title":"Background","text":"<p>To reduce the amount of writing a vehicle needed to connect sensor to control unit, Bosch developed a shared communication network which only required two wires to transmit data between sensors to controllers.</p>"},{"location":"Projects/OBD-II_CAN%20-%20Experiment/#aim","title":"Aim","text":"<ol> <li>To read sensor values off the CAN network</li> <li>To read diagnostic codes from the Onboard Diagnostics (OBD)</li> </ol>"},{"location":"Projects/OBD-II_CAN%20-%20Experiment/#controller-area-network-can","title":"Controller Area Network (CAN)","text":""},{"location":"Projects/OBD-II_CAN%20-%20Experiment/#seeed-studio-can-bus-shield-v20","title":"Seeed Studio CAN-BUS Shield V2.0","text":"<ul> <li>MCP2515: CAN Controller with SPI, Microchip</li> <li>MCP2551: CAN Transceiver</li> </ul>"},{"location":"Projects/OBD-II_CAN%20-%20Experiment/#physical-interface","title":"Physical Interface","text":"<ul> <li>DB9 for OBD-II (need a DBG to OBD-II cable)</li> </ul>"},{"location":"Projects/OBD-II_CAN%20-%20Experiment/#obd-ii","title":"OBD-II","text":""},{"location":"Projects/Worker_Down/","title":"Worker Down System","text":"<p> Return to Projects</p>"},{"location":"Projects/Worker_Down/#worker-down-system","title":"Worker Down System","text":""},{"location":"Projects/Worker_Down/#background","title":"Background","text":"<p>As part of my Bachelors degree, we had to complete a capstone project where a team spent a year working with an organistion to develop a solution for a real-world problem.</p> <p>WorkSafe's innovation unit had put forward a request for a...</p>"},{"location":"Projects/Worker_Down/#aim","title":"Aim","text":"<p>Reducing the response time of first responders to trapped or injured workers.</p>"},{"location":"Projects/Worker_Down/#outcomes-tldr","title":"Outcomes (TL;DR)","text":"<p>Well its not that long (currently...)</p>"},{"location":"Projects/Worker_Down/#requirements","title":"Requirements","text":""},{"location":"Projects/Worker_Down/#positioning","title":"Positioning","text":""},{"location":"Projects/Worker_Down/#geographic-coordinate-system","title":"Geographic coordinate system","text":""},{"location":"Projects/Worker_Down/#gps","title":"GPS","text":""},{"location":"Projects/Worker_Down/#wireless-local-positioning-system","title":"Wireless Local Positioning System","text":"<p>\"A wireless local positioning system (WLPS) is a positioning system that  functions in global positioning system (GPS)\u2010denied environments and/or  when the GPS is jammed. It allows single\u2010node localization through  roundtrip time\u2010of\u2010arrival estimation and direction\u2010of\u2010arrival (DOA)  estimation via antenna arrays. This chapter discusses the details and  the implementation of WLPSs. It explains the implementation of WLPS via  direct\u2010sequence code division multiple access system (DS\u2010CDMA) that  allows high\u2010performance detection and localization in urban areas by  exploiting path diversity. The chapter also discusses the implementation  of beamforming and DOA techniques via WLPS antenna arrays. It explores  the design stages of WLPS, which provides designers with a good example  of the design stages of a radio prototype. The chapter depicts how the  cyclostationary property inherent in the transmission signal of WLPS can  be used to improve the detection and the localization performance.\"</p> <p>Wireless Local Positioning Systems https://doi.org/10.1002/9781119434610.ch34</p>"},{"location":"Projects/Worker_Down/#communication","title":"Communication","text":""},{"location":"Projects/Worker_Down/#android-app","title":"Android App","text":""},{"location":"Projects/Worker_Down/#mapboxjs","title":"Mapbox.js","text":""},{"location":"Projects/Worker_Down/#open-questions","title":"Open Questions","text":"<p>Q: How to have a trace of worker on remote map?</p> <p>A: (#NotNecessary)</p>"},{"location":"Projects/Worker_Down/Log/","title":"15/02/2021","text":"<p>LoRa Board pin out. Was have some difficutly yesterday, as I was using D2 as button input. Have now moved it to an input which is not in use and all is working fine now.</p> <pre><code>                Arduino      RFM95/96/97/98\n                GND----------GND   (ground in)\n                3V3----------3.3V  (3.3V in)\ninterrupt 0 pin D2-----------DIO0  (interrupt request out)\n         SS pin D10----------NSS   (CS chip select in)\n        SCK pin D13----------SCK   (SPI clock in)\n       MOSI pin D11----------MOSI  (SPI Data in)\n       MISO pin D12----------MISO  (SPI Data out)\n</code></pre>"},{"location":"Projects/Worker_Down/Log/#16022021","title":"16/02/2021","text":"<p>Researching and testing ways to have three nodes commuicate with one another.</p>"},{"location":"Projects/Worker_Down/Log/#how-does-a-mesh-network-work","title":"How does a mesh network work?","text":""},{"location":"Projects/Worker_Down/Log/#ad-hoc-network","title":"Ad-hoc network","text":""},{"location":"Projects/Worker_Down/Log/#routing-algorithms","title":"Routing algorithms","text":""},{"location":"Projects/Worker_Down/Log/#1-topology","title":"1. Topology","text":""},{"location":"Projects/Worker_Down/Log/#11-proactive","title":"1.1 Proactive","text":"<p>Use \"Information current paths as inputs to classical routing algorithms. \u201cHowever, \u00a0\u00a0\u00a0\u00a0to keep this information current a large amount of control message traffic is needed, \u00a0\u00a0\u00a0\u00a0even if a path is unused. This overhead problem is exacerbated if there are many \u00a0\u00a0\u00a0\u00a0topology changes (say due to movement of the nodes).\"</p> <p>Excerpt From: Thomas G. Robertazzi. \u201cIntroduction to Computer Networking.\u201d Apple \u00a0\u00a0\u00a0\u00a0Books. </p>"},{"location":"Projects/Worker_Down/Log/#12-reactive","title":"1.2 Reactive","text":"<p>\"On the other hand, reactive algorithms such as DSR, TORA, and AODV maintain \u00a0\u00a0\u00a0\u00a0routes only for paths currently in use to keep the amount of information and control \u00a0\u00a0\u00a0\u00a0overhead more manageable. Still, more control traffic is generated if there are many \u00a0\u00a0\u00a0\u00a0topology changes.\"</p> <p>Excerpt From: Thomas G. Robertazzi. \u201cIntroduction to Computer Networking.\u201d Apple \u00a0\u00a0\u00a0\u00a0Books.</p>"},{"location":"Projects/Worker_Down/Log/#121-dynamic-source-routing-dsr","title":"1.2.1 Dynamic source routing (DSR)","text":""},{"location":"Projects/Worker_Down/Log/#122-temporally-ordered-routing-algorithm-tora","title":"1.2.2 Temporally ordered routing algorithm (TORA)","text":""},{"location":"Projects/Worker_Down/Log/#123-ad-hoc-on-demand-distance-vector-aodv-routing","title":"1.2.3 Ad hoc on-Demand distance vector (AODV) routing","text":"<p>https://www.cs.cornell.edu/people/egs/615/aodv.pdf</p> <p>Will be using flooding techique every 1-5 minutes on a small number of nodes, &lt;20.</p>"},{"location":"Projects/Worker_Down/Log/#2-position","title":"2. Position","text":"<p>\"Position based routing does not require maintenance of routes, routing tables, or \u00a0\u00a0\u00a0\u00a0generation of large amounts of control traffic other than information regarding \u00a0\u00a0\u00a0\u00a0positions. \u201cGeocasting\u201d to a specific area can be simply implemented. A number of \u00a0\u00a0\u00a0\u00a0heuristics can be used in implementing position based routing.\"</p> <p>Excerpt From: Thomas G. Robertazzi. \u201cIntroduction to Computer Networking.\u201d Apple \u00a0\u00a0\u00a0\u00a0Books.</p>"},{"location":"Projects/Worker_Down/Log/#sidenotes","title":"Sidenotes:","text":"<p>LoRa Range</p> <p>We have made some simple range tests under the following conditions:</p> <ul> <li>rf95_client base station connected to a VHF discone antenna at 8m height above ground</li> <li>rf95_server mobile connected to 17.3cm \u00bc wavelength antenna at 1m height, no ground plane.</li> <li>Both configured for 13dBm, 434MHz, Bw = 125 kHz, Cr = 4/8, Sf = 4096chips/symbol, CRC on. Slow+long range</li> <li>Minimum reported RSSI seen for successful comms was about -91</li> <li>Range over flat ground through heavy trees and vegetation approx 2km.</li> <li>At 20dBm (100mW) otherwise identical conditions approx 3km.</li> <li>At 20dBm, along salt water flat sandy beach, 3.2km.</li> </ul> <p>It should be noted that at this data rate, a 12 octet message takes 2 seconds to transmit.</p> <p>At 20dBm (100mW) with Bw = 125 kHz, Cr = \u2158, Sf = 128chips/symbol,  CRC on. (Default medium range) in the conditions described above.</p> <p>Excerpt From: </p>"},{"location":"Projects/Worker_Down/Log/#resources-found","title":"Resources Found:","text":""},{"location":"Projects/Worker_Down/Log/#17022021","title":"17/02/2021","text":""},{"location":"Projects/Worker_Down/Log/#location-estimation-in-sensor-networks","title":"Location estimation in sensor networks","text":"<p>While researching the types of topology algorithms yesterday, I stumbled upon \"Location estimation in sensor networks\" in a related table on Wikipedia. </p> <p>\"Location estimation in  the location of an object from a set of noisy measurements. These measurements are acquired in a distributed manner by a set of sensors.\" </p>"},{"location":"Projects/Worker_Down/Log/#sidenotes_1","title":"Sidenotes:","text":""},{"location":"Projects/Worker_Down/Log/#items-to-consider-for-worker-down-project","title":"Items to consider for worker down project","text":"<p>Documentation</p> <p>We expect the project to document various aspects of the project/solution, including:</p> <ul> <li>Project initiation</li> <li>High level design</li> <li>Costing and estimation</li> <li>Implementation (Ongoing risk registers etc.)</li> <li>Product Roadmap</li> <li>Deployment</li> <li>Closeout</li> </ul> <p>Key Technologies</p> <ul> <li> <p>Socket.IO</p> </li> <li> <p>Radiohead</p> </li> <li></li> </ul> <p>Development Standards</p> <ul> <li>DevOps</li> <li>Source control</li> <li>Build automation</li> <li>Read Me</li> <li>Inline documentation</li> <li>Unit tests</li> </ul>"},{"location":"Projects/Worker_Down/Log/#resources-found_1","title":"Resources Found:","text":""},{"location":"Projects/Worker_Down/Log/#24022021","title":"24/02/2021","text":""},{"location":"Projects/Worker_Down/Log/#goal-get-sketch-running-for-sd-card-readingwriting-and-gyroscope","title":"Goal: Get sketch running for SD card reading/writing and gyroscope.","text":"<p>Outputs: accelerometer x/y/z, temperature, gyro x/y/z</p>"},{"location":"Projects/Worker_Down/Log/#01032021","title":"01/03/2021","text":""},{"location":"Projects/Worker_Down/Log/#week-1-sprint-1-device-can-locate-itself","title":"Week 1, Sprint* 1 (Device\u2020 can locate itself)","text":"<p>\u2020 Device means the device a worker uses. </p> <p>Worker unit will be a TTGO T-Beam. This is a ESP3266 based board which has LoRa, Bluetooth, Wi-Fi, GPS, OLED Display</p>"},{"location":"Projects/Worker_Down/Log/#mm","title":"MM","text":"<p>Present: Finn Stainton, Daniel Sanders</p>"},{"location":"Projects/Worker_Down/Log/#03032021","title":"03/03/2021","text":""},{"location":"Projects/Worker_Down/Log/#libraries-docs","title":"Libraries Docs","text":"<p>Radiohead</p> <ul> <li> <p>RHMesh.h </p> </li> <li> <p>RH95.h</p> </li> <li> <p>RHRouter.h</p> </li> </ul> <p>TinyGPSPlus</p> <p>ublox m8030 kt 9600 baud (default) but can support 4800. </p> <p>https://www.u-blox.com/en/docs/UBX-13003221</p> <p>Wire (I^2C)</p> <p>Gyro</p> <p>Compass</p> <p>OLED</p> <pre><code>#include &lt;EEPROM.h&gt;\n#include &lt;RHRouter.h&gt;\n#include &lt;RHMesh.h&gt;\n#include &lt;RH_RF95.h&gt;\n#define RH_HAVE_SERIAL\n#define LED 13\n#define N_NODES 2\n\nuint8_t nodeId;\nuint8_t routes[N_NODES]; // full routing table for mesh\nint16_t rssi[N_NODES]; // signal strength info\n\n// Singleton instance of the radio driver\nRH_RF95 rf95;\n\n// Class to manage message delivery and receipt, using the driver declared above\nRHMesh *manager;\n\n// message buffer\nchar buf[RH_MESH_MAX_MESSAGE_LEN];\n\nint freeMem() {\n  extern int __heap_start, *__brkval;\n  int v;\n  return (int) &amp;v - (__brkval == 0 ? (int) &amp;__heap_start : (int) __brkval);\n}\n\nvoid setup() {\n  randomSeed(analogRead(0));\n  pinMode(LED, OUTPUT);\n  Serial.begin(115200);\n  while (!Serial) ; // Wait for serial port to be available\n\n  nodeId = EEPROM.read(0);\n  // nodeId = 2;\n  if (nodeId &gt; 10) {\n    Serial.print(F(\"EEPROM nodeId invalid: \"));\n    Serial.println(nodeId);\n    nodeId = 1;\n  }\n  Serial.print(F(\"initializing node \"));\n\n  manager = new RHMesh(rf95, nodeId);\n\n  if (!manager-&gt;init()) {\n    Serial.println(F(\"init failed\"));\n  } else {\n    Serial.println(\"done\");\n  }\n  rf95.setTxPower(23, false);\n  rf95.setFrequency(915.0);\n  rf95.setCADTimeout(500);\n\n  // Possible configurations:\n  // Bw125Cr45Sf128 (the chip default)\n  // Bw500Cr45Sf128\n  // Bw31_25Cr48Sf512\n  // Bw125Cr48Sf4096\n\n  // long range configuration requires for on-air time\n  boolean longRange = false;\n  if (longRange) {\n    RH_RF95::ModemConfig modem_config = {\n      0x78, // Reg 0x1D: BW=125kHz, Coding=4/8, Header=explicit\n      0xC4, // Reg 0x1E: Spread=4096chips/symbol, CRC=enable\n      0x08  // Reg 0x26: LowDataRate=On, Agc=Off.  0x0C is LowDataRate=ON, ACG=ON\n    };\n    rf95.setModemRegisters(&amp;modem_config);\n    if (!rf95.setModemConfig(RH_RF95::Bw125Cr48Sf4096)) {\n      Serial.println(F(\"set config failed\"));\n    }\n  }\n\n  Serial.println(\"RF95 ready\");\n\n  for(uint8_t n=1;n&lt;=N_NODES;n++) {\n    routes[n-1] = 0;\n    rssi[n-1] = 0;\n  }\n\n  Serial.print(F(\"mem = \"));\n  Serial.println(freeMem());\n}\n\nconst __FlashStringHelper* getErrorString(uint8_t error) {\n  switch(error) {\n    case 1: return F(\"invalid length\");\n    break;\n    case 2: return F(\"no route\");\n    break;\n    case 3: return F(\"timeout\");\n    break;\n    case 4: return F(\"no reply\");\n    break;\n    case 5: return F(\"unable to deliver\");\n    break;\n  }\n  return F(\"unknown\");\n}\n\nvoid updateRoutingTable() {\n  for(uint8_t n=1;n&lt;=N_NODES;n++) {\n    RHRouter::RoutingTableEntry *route = manager-&gt;getRouteTo(n);\n    if (n == nodeId) {\n      routes[n-1] = 255; // self\n    } else {\n      routes[n-1] = route-&gt;next_hop;\n      if (routes[n-1] == 0) {\n        // if we have no route to the node, reset the received signal strength\n        rssi[n-1] = 0;\n      }\n    }\n  }\n}\n\n// Create a JSON string with the routing info to each node\nvoid getRouteInfoString(char *p, size_t len) {\n  p[0] = '\\0';\n  strcat(p, \"[\");\n  for(uint8_t n=1;n&lt;=N_NODES;n++) {\n    strcat(p, \"{\\\"n\\\":\");\n    sprintf(p+strlen(p), \"%d\", routes[n-1]);\n    strcat(p, \",\");\n    strcat(p, \"\\\"r\\\":\");\n    sprintf(p+strlen(p), \"%d\", rssi[n-1]);\n    strcat(p, \"}\");\n    if (n&lt;N_NODES) {\n      strcat(p, \",\");\n    }\n  }\n  strcat(p, \"]\");\n}\n\nvoid printNodeInfo(uint8_t node, char *s) {\n  Serial.print(F(\"node: \"));\n  Serial.print(F(\"{\"));\n  Serial.print(F(\"\\\"\"));\n  Serial.print(node);\n  Serial.print(F(\"\\\"\"));\n  Serial.print(F(\": \"));\n  Serial.print(s);\n  Serial.println(F(\"}\"));\n}\n\nvoid loop() {\n\n  for(uint8_t n=1;n&lt;=N_NODES;n++) {\n    if (n == nodeId) continue; // self\n\n    updateRoutingTable();\n    getRouteInfoString(buf, RH_MESH_MAX_MESSAGE_LEN);\n\n    Serial.print(F(\"-&gt;\"));\n    Serial.print(n);\n    Serial.print(F(\" :\"));\n    Serial.print(buf);\n\n    // send an acknowledged message to the target node\n    uint8_t error = manager-&gt;sendtoWait((uint8_t *)buf, strlen(buf), n);\n    if (error != RH_ROUTER_ERROR_NONE) {\n      Serial.println();\n      Serial.print(F(\" ! \"));\n      Serial.println(getErrorString(error));\n    } else {\n      Serial.println(F(\" OK\"));\n      // we received an acknowledgement from the next hop for the node we tried to send to.\n      RHRouter::RoutingTableEntry *route = manager-&gt;getRouteTo(n);\n      if (route-&gt;next_hop != 0) {\n        rssi[route-&gt;next_hop-1] = rf95.lastRssi();\n      }\n    }\n    if (nodeId == 1) printNodeInfo(nodeId, buf); // debugging\n\n    // listen for incoming messages. Wait a random amount of time before we transmit\n    // again to the next node\n    unsigned long nextTransmit = millis() + random(3000, 5000);\n    while (nextTransmit &gt; millis()) {\n      int waitTime = nextTransmit - millis();\n      uint8_t len = sizeof(buf);\n      uint8_t from;\n      if (manager-&gt;recvfromAckTimeout((uint8_t *)buf, &amp;len, waitTime, &amp;from)) {\n        buf[len] = '\\0'; // null terminate string\n        Serial.print(from);\n        Serial.print(F(\"-&gt;\"));\n        Serial.print(F(\" :\"));\n        Serial.println(buf);\n        if (nodeId == 1) printNodeInfo(from, buf); // debugging\n        // we received data from node 'from', but it may have actually come from an intermediate node\n        RHRouter::RoutingTableEntry *route = manager-&gt;getRouteTo(from);\n        if (route-&gt;next_hop != 0) {\n          rssi[route-&gt;next_hop-1] = rf95.lastRssi();\n        }\n      }\n    }\n  }\n\n}\n</code></pre> <pre><code>#include &lt;TinyGPS++.h&gt;\n#include &lt;SoftwareSerial.h&gt;\n/*\n   This sample code demonstrates the normal use of a TinyGPS++ (TinyGPSPlus) object.\n   It requires the use of SoftwareSerial, and assumes that you have a\n   4800-baud serial GPS device hooked up on pins 4(rx) and 3(tx).\n*/\nstatic const int RXPin = 4, TXPin = 3;\nstatic const uint32_t GPSBaud = 4800;\n\n// The TinyGPS++ object\nTinyGPSPlus gps;\n\n// The serial connection to the GPS device\nSoftwareSerial ss(RXPin, TXPin);\n\nvoid setup()\n{\n  Serial.begin(115200);\n  ss.begin(GPSBaud);\n\n  Serial.println(F(\"FullExample.ino\"));\n  Serial.println(F(\"An extensive example of many interesting TinyGPS++ features\"));\n  Serial.print(F(\"Testing TinyGPS++ library v. \")); Serial.println(TinyGPSPlus::libraryVersion());\n  Serial.println(F(\"by Mikal Hart\"));\n  Serial.println();\n  Serial.println(F(\"Sats HDOP  Latitude   Longitude   Fix  Date       Time     Date Alt    Course Speed Card  Distance Course Card  Chars Sentences Checksum\"));\n  Serial.println(F(\"           (deg)      (deg)       Age                      Age  (m)    --- from GPS ----  ---- to London  ----  RX    RX        Fail\"));\n  Serial.println(F(\"----------------------------------------------------------------------------------------------------------------------------------------\"));\n}\n\nvoid loop()\n{\n  static const double LONDON_LAT = 51.508131, LONDON_LON = -0.128002;\n\n  printInt(gps.satellites.value(), gps.satellites.isValid(), 5);\n  printFloat(gps.hdop.hdop(), gps.hdop.isValid(), 6, 1);\n  printFloat(gps.location.lat(), gps.location.isValid(), 11, 6);\n  printFloat(gps.location.lng(), gps.location.isValid(), 12, 6);\n  printInt(gps.location.age(), gps.location.isValid(), 5);\n  printDateTime(gps.date, gps.time);\n  printFloat(gps.altitude.meters(), gps.altitude.isValid(), 7, 2);\n  printFloat(gps.course.deg(), gps.course.isValid(), 7, 2);\n  printFloat(gps.speed.kmph(), gps.speed.isValid(), 6, 2);\n  printStr(gps.course.isValid() ? TinyGPSPlus::cardinal(gps.course.deg()) : \"*** \", 6);\n\n  unsigned long distanceKmToLondon =\n    (unsigned long)TinyGPSPlus::distanceBetween(\n      gps.location.lat(),\n      gps.location.lng(),\n      LONDON_LAT, \n      LONDON_LON) / 1000;\n  printInt(distanceKmToLondon, gps.location.isValid(), 9);\n\n  double courseToLondon =\n    TinyGPSPlus::courseTo(\n      gps.location.lat(),\n      gps.location.lng(),\n      LONDON_LAT, \n      LONDON_LON);\n\n  printFloat(courseToLondon, gps.location.isValid(), 7, 2);\n\n  const char *cardinalToLondon = TinyGPSPlus::cardinal(courseToLondon);\n\n  printStr(gps.location.isValid() ? cardinalToLondon : \"*** \", 6);\n\n  printInt(gps.charsProcessed(), true, 6);\n  printInt(gps.sentencesWithFix(), true, 10);\n  printInt(gps.failedChecksum(), true, 9);\n  Serial.println();\n\n  smartDelay(1000);\n\n  if (millis() &gt; 5000 &amp;&amp; gps.charsProcessed() &lt; 10)\n    Serial.println(F(\"No GPS data received: check wiring\"));\n}\n\n// This custom version of delay() ensures that the gps object\n// is being \"fed\".\nstatic void smartDelay(unsigned long ms)\n{\n  unsigned long start = millis();\n  do \n  {\n    while (ss.available())\n      gps.encode(ss.read());\n  } while (millis() - start &lt; ms);\n}\n\nstatic void printFloat(float val, bool valid, int len, int prec)\n{\n  if (!valid)\n  {\n    while (len-- &gt; 1)\n      Serial.print('*');\n    Serial.print(' ');\n  }\n  else\n  {\n    Serial.print(val, prec);\n    int vi = abs((int)val);\n    int flen = prec + (val &lt; 0.0 ? 2 : 1); // . and -\n    flen += vi &gt;= 1000 ? 4 : vi &gt;= 100 ? 3 : vi &gt;= 10 ? 2 : 1;\n    for (int i=flen; i&lt;len; ++i)\n      Serial.print(' ');\n  }\n  smartDelay(0);\n}\n\nstatic void printInt(unsigned long val, bool valid, int len)\n{\n  char sz[32] = \"*****************\";\n  if (valid)\n    sprintf(sz, \"%ld\", val);\n  sz[len] = 0;\n  for (int i=strlen(sz); i&lt;len; ++i)\n    sz[i] = ' ';\n  if (len &gt; 0) \n    sz[len-1] = ' ';\n  Serial.print(sz);\n  smartDelay(0);\n}\n\nstatic void printDateTime(TinyGPSDate &amp;d, TinyGPSTime &amp;t)\n{\n  if (!d.isValid())\n  {\n    Serial.print(F(\"********** \"));\n  }\n  else\n  {\n    char sz[32];\n    sprintf(sz, \"%02d/%02d/%02d \", d.month(), d.day(), d.year());\n    Serial.print(sz);\n  }\n\n  if (!t.isValid())\n  {\n    Serial.print(F(\"******** \"));\n  }\n  else\n  {\n    char sz[32];\n    sprintf(sz, \"%02d:%02d:%02d \", t.hour(), t.minute(), t.second());\n    Serial.print(sz);\n  }\n\n  printInt(d.age(), d.isValid(), 5);\n  smartDelay(0);\n}\n\nstatic void printStr(const char *str, int len)\n{\n  int slen = strlen(str);\n  for (int i=0; i&lt;len; ++i)\n    Serial.print(i&lt;slen ? str[i] : ' ');\n  smartDelay(0);\n}\n</code></pre>"},{"location":"Projects/Worker_Down/Log/#concerns","title":"Concerns","text":"<p>Lack of builtin memory resources. </p> <p>TTGO (ESP32) has 512KB of Flash, 520KB of SRAM, 448KB EEPROM</p> <p>Uno (ATmega328P) has 32KB of Flash, 2KB of SRAM, 1KB EEPROM</p>"},{"location":"Projects/Worker_Down/Log/#04032021","title":"04/03/2021","text":"<p>Have missed deadline for completeing UML diagrams. This I believe is in due part to not having any further planning into the matter. </p> <p>Possible Diagrams:</p> <ul> <li> <p>Sequence</p> </li> <li> <p>Activity</p> </li> <li> <p>Class (Not using OOP but instead Functional)</p> </li> <li> <p>Use Cases</p> </li> </ul> <p>Don't have a case studys</p> <p>Scope of System</p> <p>For Sprint 1</p> <ul> <li> <p>As a worker, I want to know my location with GPS, so that I can plot my position on a map.</p> </li> <li> <p>As a worker, I want to know my location without GPS, so that I can plot my position on a map.</p> </li> </ul> <p>Semi-formal Grammar</p> <p>Tracked Worker: </p> <p>Technician: </p>"},{"location":"Projects/Worker_Down/Log/#use-cases","title":"Use Cases","text":"Use Case Name Manual \"Worker Down\" Alarm Trigger Date &amp; Version 4/3/2021, ver. 1 Objective Author Finn Stainton Actor &amp; Goals Worker: Alert co-workers to respond Stakeholder Worker, First Responders (Co-workers) Trigger Worker Preconditions Worker has moblie unit present in operation order. Moblie unit is connected to the local network. Main Success Flow User Actions System Actions Alternate Flow User Actions System Actions Post conditions"},{"location":"Projects/Worker_Down/Log/#09032021-4hrs","title":"09/03/2021 4hrs","text":"<pre><code>Faller-&gt;Personal System: Activates Alarm Toggle Switch\nPersonal System-&gt;Coworker's Personal System: Warning Alert\nCoworker's Personal System-&gt;Coworker: Yellow-Red Dual Flash (Chirp down/up repeat 2 sec)\nCoworker-&gt;Coworker's Personal System: Depress button input\n</code></pre> <pre><code>st=&gt;start: Start\ne=&gt;end: End\nop1=&gt;operation: op\nsub1=&gt;subroutine: sub\ncond=&gt;condition: Is &lt;45 degress\nio=&gt;inputoutput: button\npara=&gt;parallel: task\n\n\nst-&gt;op1-&gt;cond\ncond(yes)-&gt;io-&gt;e\ncond(no)-&gt;para\npara(path1, bottom)-&gt;sub1(right)-&gt;op1\npara(path2, top)-&gt;op1\n</code></pre> <pre><code>st=&gt;start: Start\ne=&gt;en: End\ngyro=&gt;inputoutput: Read Gyro\nangleCond=&gt;condition: Check if Gyro \nless than 45\u02da\nstartTimer=&gt;operation: Start Timer\ncheckToggle=&gt;subroutine: Check Manual Alarm Toggle Switch\n\nst-&gt;gyro-&gt;angleCond\nangleCond(yes)-&gt;startTimer\nangleCond(no)-&gt;checkToggle\n</code></pre>"},{"location":"Projects/Worker_Down/Log/#15032021","title":"15/03/2021","text":"<p>Today I want to: Complete a concept system architecture</p> <p>How can the gateway store data from LoRa communications</p> <p>Future challenges: </p> <ul> <li>Concurrent design, (single core)</li> </ul> <p>Audible Alarm Guidelines</p> <ul> <li> <p>Worker's should be able to complete an operation in a Dangerous environment</p> </li> <li> <p>This means no high pitch sounds which cause unbearable irritation to the operator. </p> </li> </ul>"},{"location":"Projects/Worker_Down/Log/#19042021","title":"19/04/2021","text":"<p>Today I want to: Write down all the research I have completed in a system report</p> <p>Challenges: </p> <p>Had setup a group meeting from 11-2 on R&amp;D onsite day. </p> <p>Jackson had a famliy event</p> <p>Daniel was in hospital</p>"},{"location":"Projects/Worker_Down/Log/#15042021","title":"15/04/2021","text":"<p>Worked 2 hours on 14<sup>th</sup> </p> <p>Had meeting on 10<sup>th</sup>. Decided to change to a PMP methodology</p>"},{"location":"Projects/Worker_Down/Log/#project-management-deliverables","title":"Project Management Deliverables:","text":"<ul> <li> <p> Project Charter</p> </li> <li> <p> Stakeholder Register</p> </li> <li> <p> Stakeholder Management</p> </li> <li> <p> Product Scope</p> </li> <li> <p> Product Requirements</p> </li> <li> <p> WBS</p> </li> <li> <p> Schedule (Sequence, etc.)</p> </li> <li> <p> Critical path analysis</p> </li> <li> <p> Gantt Chart</p> </li> <li> <p> Budget</p> </li> <li> <p> Risk Register</p> </li> <li> <p> Risk Management Plan</p> </li> <li> <p> Team Management?</p> </li> <li> <p> Control Scope?</p> </li> <li> <p> Control Risks?</p> </li> <li> <p> Control Schedule</p> </li> <li> <p> Change Management</p> </li> <li> <p> Change Form</p> </li> </ul>"},{"location":"Projects/Worker_Down/Log/#21052021","title":"21/05/2021","text":"<p>Had mentor meeting today. Discussed project challenges (mainly of uncertainty and change of client's requirements). Poster design. Mentor suggested telling the story should be the main focus.  </p> <p>24</p> <p>25</p> <p>26</p>"},{"location":"Projects/Worker_Down/Log/#27052021-4-hours","title":"27/05/2021 - 4 hours","text":"<p>Poster formatting and content </p> <p>3:14 hr work period with Jackson. </p>"},{"location":"Projects/Worker_Down/Log/#28052021","title":"28/05/2021","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/","title":"Worker Down System","text":"<p> Return to Projects</p> <p>Note</p> <p>This project is on the same topic as my Final Year R&amp;D Project. However this page is a further advancement on the idea and not intended to cover all items completed or the final conclusions made in the R&amp;D project.</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#summary","title":"Summary","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#problem","title":"Problem","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#aim","title":"Aim","text":"<p>To reduce the response time of first responders to trapped and injured workers.</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#constraints","title":"Constraints","text":"<ul> <li> <p>May have no/ limited connection to internet</p> </li> <li> <p>System shouldn't solely rely on GPS.</p> </li> </ul>"},{"location":"Projects/Worker_Down/Worker-Down-System/#requirements","title":"Requirements","text":"<ol> <li> <p>Device can locate itself</p> </li> <li> <p>Device network can forward messages between multiple nodes.</p> </li> <li> <p>Device can automatic trigger an alarm</p> </li> <li> <p>Device can record and transmit alarm activation</p> </li> <li> <p>Device can receive alarms.</p> </li> <li> <p>Portable computer can display a map with all units last know location</p> </li> <li> <p>Map can display alarms</p> </li> </ol>"},{"location":"Projects/Worker_Down/Worker-Down-System/#working-environment","title":"Working Environment","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#forestry","title":"Forestry","text":"<p>The current problem in the forestry industry is that there are ~~no reliable ~~safety measures in place for workers if they are involved in an accident. Through this project we feel that we can create a safer industry and give workers a greater peace of mind of making it home safely at the end of the day. There are a variety of accidents that are prominent in the forestry industry. These being falling objects such as trees, branches, heavy machinery, trip hazards, fatigue and overhead wires from the log hauler operation. The client being Worksafe has come to us to develop a worker down solution to give forestry workers a greater chance of survival in the event of an accident. Our main objective is to limit the time that is taken to get to a worker that has been involved in an accident. By limiting the time that it takes to get a worker in trouble the greater the chance of survival or limiting the severity of the injury.</p> <p>Agriculture and Forestry in New Zealand is one of the largest industries in New Zealand currently employing over 20,000 workers. In 2019, there were 7 fatalities and 136 injuries for the forestry industry which resulted in a week or more off work (Worksafe, MPI, FISC 2020). With the implementation of a worker down system we believe we can limit the number of deaths and give workers a peace of mind while working in one of the most dangerous industries in New Zealand (MBIE 2018).</p> <p>Currently in the forestry industry the only safety device in use is there UHF radios (Haines, L, Worksafe 2012). Each work has one of these and can communicate with anyone at the site who also has a radio on the same channel. Whether this be other workers nearby or the foreman back at base. Using the radios every 30 \u2013 45 minutes workers radio into the foreman who takes a register of each worker checking their safety and location at that specific time. Through talking to researchers and people currently in industry this is not a mandatory protocol for all of forestry. The foreman on site also has many other jobs, so he is not always available to take the register. Secondly time if a worker was to have an accident factor is the time between radios check-ins. If an accident were to occur straight after a check-in had taken place and a worker was knocked unconscious, they could be unnoticed for up to 45 minutes. They would only then be identified as in trouble when the next check-in takes place. Even then the foreman must notify other workers and has no exact location of the worker injured. Depending on the terrain and distance it could take a lengthy amount of time to locate and get to the injured worker. This current protocol of checking in is not reliable and heavily depends on the foreman\u2019s competence that day. By implementing a specific worker down system there would be no need for radio check-ins and a register to be taken. Each worker\u2019s exact location would be tracker frequently and displayed on a map giving a foreman precise location and status information of each worker.</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#roles","title":"Roles","text":"<p>Faller</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#kit","title":"Kit","text":"<p>Agriculture Industry</p> <p>On average, five people are killed on New Zealand farms each year in work- related quad bike</p> <p>incidents. In addition, there are more than 845 work-related injuries each year on New Zealand</p> <p>farms, with more than 160 serious enough to require time off work or ongoing help. 52% of the</p> <p>serious harm incidents on farms investigated by the Department of Labour between 2000 and</p> <p>2008 involved a quad bike rollover (Taunton E 2017). The system could be used in multiple</p> <p>worker down scenarios not just limiting it to the forestry industry. In the farming industry many</p> <p>workers are alone for long periods of time as well. A lone worker system would be incredibly</p> <p>useful. The system would be easily adaptable to work in the agriculture industry with minor</p> <p>adjustments. With agriculture workers not having any kind of safety device currently it would</p> <p>bring peace of mind and safety to those working alone.</p> <p>Three systems connected by one network</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#positioning-system","title":"Positioning System","text":"<p>For a worker to be positioned, we have to have a universal coordinate system which is related to their actual geographic location (why)</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#geographic-coordinate-system-gcs","title":"Geographic Coordinate System (GCS)","text":"<p>New Zealand Geodetic Datum 2000 (NZGD2000)</p> <p>New Zealand Vertical Datum 2016 (NZVD2016)</p> <p>Height Transformation Examples</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#global-positioning-system","title":"Global Positioning System","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#wireless-local-positioning-system","title":"Wireless Local Positioning System","text":"<p>Quote</p> <p>\"A wireless local positioning system (WLPS) is a positioning system that functions in global positioning system (GPS)\u2010denied environments and/or when the GPS is jammed. It allows single\u2010node localization through roundtrip time\u2010of\u2010arrival estimation and direction\u2010of\u2010arrival (DOA) estimation via antenna arrays.</p> <p>Wireless Local Positioning Systems https://doi.org/10.1002/9781119434610.ch34</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#trilateration","title":"Trilateration","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#triangulation","title":"Triangulation","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#ranging","title":"Ranging","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#time-difference-of-arrival-toatdoa","title":"Time (Difference) of Arrival (ToA/TDoA)","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#direction-of-arrival","title":"Direction of Arrival","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#calculations","title":"Calculations","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#alarm-system","title":"Alarm System","text":"<ul> <li> <p>A \"worker down\" alarm should be triggered when a worker is incapacitated</p> </li> <li> <p>A user should be able to manually trigger a worker down alarm</p> </li> <li> <p>A set of emergency contacts should be contacted if a worker down alarm is triggered</p> </li> <li> <p>Worker down alarms should contain the last know location of the worker</p> </li> <li> <p>The device should notify a member to check\u00adin every 30 minutes</p> </li> <li> <p>If a work fails to check in after 5 minutes, a worker down alarm should be sent.</p> </li> <li> <p>All emergency contacts should be alerted to all active worker down alarms</p> </li> <li> <p>A user should be able to pause automatic alarm triggers (meal break)</p> </li> </ul>"},{"location":"Projects/Worker_Down/Worker-Down-System/#automatic-trigger","title":"Automatic Trigger","text":"<p>Alarm would be automatically triggered after verification the user is in an abnormal unresponsive state</p> <ol> <li> <p>Detect abnormal state (fall/ no movement)</p> </li> <li> <p>Verify abnormal state (time)</p> </li> <li> <p>Test unresponsive state (alarm)</p> </li> <li> <p>Verify unresponsive state (time)</p> </li> <li> <p>Send Alarm (Continuous)</p> </li> <li> <p>Cancel Alarm</p> </li> </ol>"},{"location":"Projects/Worker_Down/Worker-Down-System/#fall-detection","title":"Fall Detection","text":"<p>Definition: A fall is a rapid descent from a higher to lower height.</p> <p>Detection of falls could be achieved by measuring:</p> <p>Angle</p> <p>A person being at a angle of less that 45 degrees for a period of time. This could be measured by a calibrated gyroscope.</p> <p>Acceleration</p> <p>A high increase and/or decrease in a person\u2019s velocity. This could be measured by a calibrated accelerometer.</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#motion-detection","title":"Motion Detection","text":"<p>A lack of motion for a period could be an indication that a worker is incapacitated. Measuring motion could be achieved via a accelerometer.</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#manual-trigger","title":"Manual Trigger","text":"<p>An alarm can be triggered manually on the device using a button or pull latch.</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#interface","title":"Interface","text":"<p>Given the work environment this system will be working in, where distractions could lead to serious injury. Response times to warning should be extended to give time for the user to complete work. Warnings should be noticeable in a loud environment, but if Audible warning are used, they should be bearable to work through to complete a dangerous task.</p> <p>Worker Unit \u2013 \u201cWorker Down\u201d Alarm:</p> <p>Warning</p> <p>Following may change with refinement</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#transmit-manual-trigger","title":"Transmit: Manual Trigger","text":"<ol> <li>Should be a toggle switch to provide visual feedback which reassures the user</li> </ol> <p>that an alarm has been triggered.</p> <ol> <li> <p>Toggle switch should be physically protected against accidental motion.</p> </li> <li> <p>To cancel a manual triggered alarm, the worker must switch the toggle switch</p> </li> </ol> <p>back to the normal position, then must provide three instances (button presses</p> <p>or similar) within a 5 second period.</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#transmit-automatic-trigger","title":"Transmit: Automatic Trigger","text":"<ol> <li>A wearer is assumed to need help after they have collapsed and are</li> </ol> <p>unresponsive.</p> <ol> <li> <p>A collapsed state is when the wearer\u2019s device is at an angle of less than 45 \u030a for more than 30 seconds.</p> </li> <li> <p>Upon a collapsed state being declared, a \u201cWarning alert\u201d is triggered.</p> </li> <li> <p>A \u201cwarning alert\u201d is a prerequisite to a full \u201cWorker Down\u201d alarm and is aimed at</p> </li> </ol> <p>giving the worker an option to cancel the alarm sequence.</p> <ol> <li> <p>An \u201cunresponsive\u201d state is when the wearer does not cancel the warning alert within (less than) 30 seconds.</p> </li> <li> <p>To cancel a warning alert, the wearer must provide three instances (button</p> </li> </ol> <p>presses or similar) within a 5 second period.</p> <ol> <li> <p>A wearer can only cancel a warning alert if they are the origin.</p> </li> <li> <p>When both the collapsed and/ or just the unresponsive state are fulfilled, then a \u201cworker down\u201d alarm is triggered.</p> </li> <li> <p>If a worker has fallen but are not at an angle of 45 \u030a or less, then after 5 minutes a check in notification</p> </li> </ol>"},{"location":"Projects/Worker_Down/Worker-Down-System/#worker-down-alarm-transmit-sequence","title":"Worker Down Alarm Transmit sequence","text":"<ol> <li> <p>While an alarm is transmitting and not accepted. The device will be in a \u201cAlarm Transmitting\u201d state.</p> </li> <li> <p>Upon the alarm being accepted by a responder. The device will go to a \u2018alarm</p> </li> </ol> <p>accepted\u2019 state.</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#receive-warning-alert","title":"Receive: Warning Alert","text":"<ol> <li> <p>All connected members of a group will receive a \u201cWarning Alert\u201d whenever there is an active \u201cWorker Down\u201d alarm. This will last until the alarm has be deactivated.</p> </li> <li> <p>Members may accept a Warning alert which will hush any audibly alert and</p> </li> </ol> <p>change the light sequence.</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#receive-respond-alert","title":"Receive: Respond Alert","text":"<ol> <li> <p>A Respond Alert will be sent to a set of pre-set \u201cresponders\u201d, this will include the foreman and secondary emergency contacts.</p> </li> <li> <p>A Respond Alert will also be sent to one or two of the members closest to the active alarm.</p> </li> </ol>"},{"location":"Projects/Worker_Down/Worker-Down-System/#receive-check-in","title":"Receive: Check in","text":"<ol> <li>A \u201cCheck in\u201d alert is activated when a worker has been motionless for more than 5 minutes. This is to check that a worker has not be collapsed at an angle of more than 45 degrees and has not manually activated a \u201cWorker Down\u201d Alarm.</li> <li> <p>Should not rely location as it may have an inaccuracy which a worker may not exceed.</p> </li> <li> <p>Can implemented to activate on a rolling timer, this would be used in situation where the operator is in a static position.</p> </li> </ol>"},{"location":"Projects/Worker_Down/Worker-Down-System/#receive-muster-alert","title":"Receive: Muster Alert","text":"<ol> <li>A muster alert is to communicate with all workers to gather a pre-determined location.</li> </ol>"},{"location":"Projects/Worker_Down/Worker-Down-System/#alarms-notifications-table","title":"Alarms/ Notifications Table","text":"<p>| Type | Priority | Before accepted | After accepted |</p> <p>| --------------------------------- | -------- | ------------------------------------------------------------- | ------------------- |</p> <p>| Muster | 4 | Blue/ Yellow | Blue/ Yellow |</p> <p>| Abnormal/Warning Alert | 3 | Yellow-Red Dual Flash (Chirp down/up repeat 2 sec) | Yellow Dual Flash |</p> <p>| Respond Alert | 2 | Red Fast Strobe (fade in siren) | Red Fast Strobe |</p> <p>| Alarm Transmitting | 1 | Slow Purple fade in/out | [Alarm Received] |</p> <p>| Check in | 4 | Blue (Dual Chirp Up, repeats every 5 seconds) | [Check in Received] |</p> <p>| Alarm/ Check in Received | 4 | Green for 10 secs (Single Chirp up/down) | n/a |</p> <p>| Break time (Worker down sleeping) | 4 | Long Blue Pulse | n/a |</p> <p>| Normal | 4 | Green flash (1 sec) upon passing connection test (~5 minutes) | n/a |</p> <p></p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#map-system","title":"Map System","text":"<p>Due to environment constraints with no/ limited internet access, an offline</p> <p></p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#network","title":"Network","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#physical-layer","title":"Physical Layer","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#lora","title":"LoRa","text":"<p>Limitations</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#sigfox","title":"Sigfox","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#nb-iot","title":"NB-IoT","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#topology","title":"Topology","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#ad-hoc-network","title":"AD HOC Network","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#mesh-network","title":"Mesh Network","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#wireless-sensor-network","title":"Wireless Sensor Network","text":"<p>A Wireless Sensor Network is a group of spatially oriented sensors to monitor physical or environmental conditions and to cooperatively pass the data via a network to a main location. A WSN is normally composed of a central processor, communication module and sensor nodes with internal or external power supplies. Currently Wireless Sensor Networks are used in the monitoring of temperature within materials, heavy load handling, engineering structures and for extreme event detection. These sensors can be highly sensitive and detect even the most minute change depending on what they are detecting. The sensors can have multiple uses such as pressure sensing, temperature sensing or movement detection. For this project a Wireless Sensor Network would be difficult to implement as it is easily blocked or interfaced by obstacles which there are a lot of where this device is going to be used. This type of network also consumes a large amount energy as it is constantly sensing (Zhang M, Cao T, Zhao X 2017).</p> <p></p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#implementation","title":"Implementation","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#hardware","title":"Hardware","text":"<p>Decided to use TTGO T-Beam's for \"Worker Units\"</p> <p></p> <ul> <li> <p>ESP core</p> </li> <li> <p>Bluetooth</p> </li> <li> <p>HRF 96 LoRa Radio</p> </li> <li> <p>GPS (NEO-6m)</p> </li> <li> <p>1x18650 battery</p> </li> <li> <p>Display support (I2C)</p> </li> </ul> <p>Timer</p> <p>System time</p> <p>Gyroscope</p>"},{"location":"Projects/Worker_Down/Worker-Down-System/#reflection","title":"Reflection","text":""},{"location":"Projects/Worker_Down/Worker-Down-System/#references","title":"References","text":""},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2021/12/20/graduated/","title":"Graduated \ud83c\udf89","text":"<p>Graduated from AUT with a Bachelor of Computer &amp; Information Sciences, Double Major in Computer Science and Software Development.</p> <p>The papers I enjoyed the most were the \"hands on\" development like Software Development Practice, where our team created a Full-Stack React app.</p> <p>Here is a table of the skills I learnt from each paper.</p> Paper Skills Paper Skills R&amp;D Project A &amp; B <code>External Client Communication</code>, <code>Requirements Study</code>, <code>Market Study</code>, <code>Research and Business Recommendation Report</code>, <code>Positioning</code>, <code>Alarm System</code>,  <code>Wireless Communications</code> Software Development Practice <code>Authentication</code>, <code>JWT</code>, <code>Socket.IO</code>, <code>React.js</code>, <code>Express.js</code>, <code>TDD</code>, <code>SCRUM</code>, <code>Full-stack</code>, <code>MongoDB</code>, <code>UML Component</code> Contemporary Issues in Software Engineering <code>Agile</code>, <code>SCRUM</code>, <code>Git</code>, <code>Mocha</code>, <code>React.js</code>, <code>Express.js</code>, <code>TDD</code>, <code>REST API</code>, <code>CI/CD</code>, <code>Heroku</code> Distributed and Mobile Systems <code>Java EE</code>, <code>Resource Coordination</code>, <code>RMI</code>, <code>Messaging</code>, <code>EJBs</code>, <code>RESTful API</code>, <code>JSON</code>, <code>Web Services</code>, <code>Bluetooth</code>, <code>NFC</code>, <code>Mobile Application Development</code>, <code>Java</code>, <code>Glassfish</code> Programming 2 <code>Java</code>, <code>Object Oriented Programming</code>, <code>Encapsulation</code>, <code>Inheritance</code>, <code>Polymorphism</code>, <code>Exceptions</code>, <code>Error Handling</code> Programming Languages <code>Compilers</code>, <code>Lexical Analysis</code>, <code>Parsing</code>, <code>LISP</code>, <code>Racket</code>, <code>Smalltalk</code>, <code>Prolog</code> Data Structures and Algorithms <code>Threads</code>, <code>Sets</code>, <code>Linear Collections</code>, <code>Sorting</code>, <code>Searching</code>, <code>Trees</code>, <code>Graphs</code>, <code>Databases</code>, <code>Java</code> Algorithm Design and Analysis <code>Concurrency</code>, <code>Design Patterns</code>, <code>Algorithmic Analysis</code>, <code>Design Techniques</code>, <code>Advanced Data Structures</code>, <code>Graph Algorithms</code>, <code>Matrix Operations</code>, <code>Fast Fourier Transforms</code>, <code>Java</code> Algebra and Discrete Mathematics <code>Number Systems</code>, <code>Lines</code>, <code>Planes</code>, <code>Matrices</code>, <code>Sets</code>, <code>Relations</code>, <code>Functions</code>, <code>Logic</code>, <code>Proofs</code> Computer Network Principles <code>CCNA Routing and Switching</code>, <code>Cisco IOS</code> <code>IP</code>, <code>TCP</code>, <code>OSI Model</code>, <code>DNS</code>, <code>UDP</code> Computing Technology in Society Introduction to <code>Blockchain</code>, <code>Computer Hardware</code>, <code>Ethics</code>, <code>Cloud Computing</code>, <code>Penetration Testing</code>, <code>Internet of Things</code>, <code>AI</code> Data and Process Modelling <code>Requirements Discovery</code>, <code>UML Class</code>, <code>UML Sequence</code>, <code>UML State</code>, <code>Use Cases</code>, <code>Activity Diagrams</code> Enterprise Systems <code>Software Development Life Cycle</code>, <code>Process Modelling</code>, <code>Data Flow Diagrams</code>, <code>Transaction Processing Systems</code>, <code>Management Information Systems</code> Foundations of IT Infrastructure <code>Touch Typing</code>, <code>Data Representation and Conversion</code>, <code>Reading Technical Documentation</code>, <code>History of Computing</code>, <code>Overview of Computer Systems Parts</code>, <code>LC-3 Assembly</code>, <code>CLI</code> IT Project Management <code>PMI</code>, <code>Microsoft Project</code>, <code>Project Processes</code>, <code>Team Work</code>, <code>Scope</code>, <code>Time</code>, <code>Cost</code>, <code>Risk</code>, <code>Quality</code>, <code>Communication</code> and <code>Stakeholder Management</code> Logical Database Design <code>SQL</code>, <code>Entity Relationship Modelling</code>, <code>Relational Database</code>, <code>Oracle SQLServer</code> Logic and Discrete Structures <code>Combinatorics</code>, <code>Graphs</code>, <code>Trees</code>, <code>Logic</code>  , <code>Proofs</code> Operating Systems <code>Concurrency</code>,  <code>Java</code>, <code>CLI</code>, <code>Bash</code>, <code>Memory Management</code>, <code>File System</code>, <code>CPU Scheduling</code> Program Design and Construction <code>Code Smells</code>, <code>Code Refactoring</code>, <code>Java</code> Programming 1 <code>C Programming</code>, <code>Types</code>, <code>Loops</code>, <code>Recursion</code>, <code>Malloc</code>, <code>Pointers</code> Theory of Computation <code>Automata</code>, <code>Grammars</code>, <code>Turing Machines</code>,"},{"location":"blog/2019/10/13/motorised-ball-valve-teardown/","title":"Motorised Ball Valve: Teardown","text":"<p>Teardown of U.S. Solid USS-MSV00020 (1-inch, 25 mm NPT) purchased from Amazon. Unboxing it from a small white box which contains the valve(obviously) and an installation and wiring diagrams information sheet. </p> <p>Who/ what is US Solid: \u201cFounded in 2011 U.S. Solid is new generation manufacturer of precision laboratory cuvettes, laboratory material and equipment. U.S. Solid is founded by four PhD. students with extensive experience in spectroscopy techniques but also mechanical and chemical engineering. We came to a conclusion that the today\u2019s market is saturated with questionable quality, high cost and above all expensive laboratory equipment.\u201d<sup>1</sup></p> <p>If you navigate amazon for motorised valves there appears to be multiple companies producing the same valve. When searching the model number given by multiple companies, it leads to Tonhe flow as the original manufactures of the valves, which US Solid also sell. On inspection of the top plastic cover, it has a deeper blue colour which may indicate that it has been replaced with a US Solid branded cover.</p> <p>I am not claiming US Solid do resell Tonhe flow. Just the possibly</p> <p>Claimed Stats:</p> <ul> <li>9-24V AC/DC</li> <li>&lt;2Nm</li> <li>IP65</li> <li>2W max power draw</li> <li>1\u201d brass</li> <li>&lt;40\u02daC ambient temperature</li> <li>&lt;100\u02daC medium temperature</li> <li>~5 second open/close time</li> <li>&lt;1MPa medium pressure</li> </ul>"},{"location":"blog/2019/10/13/motorised-ball-valve-teardown/#physical-design","title":"Physical Design","text":"<p>The valve is made from brass which can tarnish easily with high levels of bare skin handling. The valve mounding has DN25 which indicates it was made in a country which uses metric measurements. It uses a 1\u201d female NP Thread </p>"},{"location":"blog/2019/10/13/motorised-ball-valve-teardown/#electrical-design","title":"Electrical Design","text":"<p>There are three variants, that being; two, three and five wire versions. The following is of the three-wire version. Once the top cover is removed, a single PCB with a variety of through-hole and SMD component can be observed. The input wires are soldered onto the PCB with six other wires being (left to right) Switch close out/in, Switch open in/out, Close, Ground, Open, Motor -/+. The PCB can be broken into three sections, a step-down converter, H-bridge and switch logic.</p> <p></p> <p>Power is supplied to a MC3463A (which is setup as a buck converter) through a double diode junction between the \"Open\" and \"Close\". This then passes through a 0.5A<sup>2</sup> resettable fuse and across the top of a diode, varistor and polarised capacitor... </p> <p> </p> <ol> <li> <p>US Solid. (2019). About us. Retrieved from US Solid: https://ussolid.com/about-us/ \u21a9</p> </li> <li> <p>Unsure on value\u00a0\u21a9</p> </li> </ol>"},{"location":"blog/archive/2021/","title":"2021","text":""},{"location":"blog/archive/2019/","title":"2019","text":""}]}